name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.3'

      - name: Install dependencies
        run: go mod tidy

      - name: Install goversioninfo
        run: go install github.com/josephspurrier/goversioninfo/cmd/goversioninfo@latest

      - name: Add Go bin to PATH
        run: echo "${{ runner.tool_cache }}/go/$(go version | awk '{print $3}')/bin" >> $GITHUB_PATH

      - name: Generate .syso
        run: go generate .\cmd\

      - name: Build application
        run: go build -ldflags="-H windowsgui" -o windows-ram-cleaner.exe .\cmd\

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-ram-cleaner
          path: windows-ram-cleaner.exe
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }} # CLI авторизация
      TAG: ${{ github.ref_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-ram-cleaner

      - name: Install GitHub CLI
        run: sudo apt-get install -y gh

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          gh release create "$TAG" \
            --repo "${{ github.repository }}" \
            --title "Release $TAG" \
            --generate-notes \
            windows-ram-cleaner.exe
